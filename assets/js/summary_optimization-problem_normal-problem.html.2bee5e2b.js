"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6332],{6995:(l,i)=>{i.A=(l,i)=>{const a=l.__vccOpts||l;for(const[l,e]of i)a[l]=e;return a}},7097:(l,i,a)=>{a.r(i),a.d(i,{comp:()=>r,data:()=>n});var e=a(6254);const t={},r=(0,a(6995).A)(t,[["render",function(l,i){return(0,e.uX)(),(0,e.CE)("div",null,i[0]||(i[0]=[(0,e.Fv)('<h1 id="常见优化问题" tabindex="-1"><a class="header-anchor" href="#常见优化问题"><span>常见优化问题</span></a></h1><h1 id="一、接口变慢问题" tabindex="-1"><a class="header-anchor" href="#一、接口变慢问题"><span>一、接口变慢问题</span></a></h1><h2 id="如何排查慢接口原因" tabindex="-1"><a class="header-anchor" href="#如何排查慢接口原因"><span>如何排查慢接口原因?</span></a></h2><p>定位问题:</p><ul><li>trace工具</li><li>如果没有APM trace平台, 生产环境安装arthas ,利用trace接口,定位那一块.</li></ul><p>解决方法:</p><ul><li>扩容 <ul><li>应用扩容: 应用cpu和内存变高</li><li>redis扩容、Mysql扩容、Kafka扩容</li></ul></li><li>重启</li><li>代码逻辑修改</li></ul><h2 id="如何优化" tabindex="-1"><a class="header-anchor" href="#如何优化"><span>如何优化?</span></a></h2><h3 id="数据库慢" tabindex="-1"><a class="header-anchor" href="#数据库慢"><span>数据库慢</span></a></h3><p>导致数据库查询变慢的原因:</p><ul><li>未加索引</li><li><h2 id="索引失效" tabindex="-1"><a class="header-anchor" href="#索引失效"><span>索引失效</span></a></h2></li><li>小表驱动大表</li><li>SQL不能太复杂,检查子查询</li><li>返回数据量太大</li><li>单表数据量太大,考虑分片或者其他存储</li></ul><h3 id="调用第三方接口慢" tabindex="-1"><a class="header-anchor" href="#调用第三方接口慢"><span>调用第三方接口慢</span></a></h3><ul><li>设置合理超时时间,参考对方线上P95时间和自身接口要求</li><li>集成限流、熔断框架,防止对方接口拖垮自身接口</li><li>事务性接口,需要考虑重试补偿逻辑</li><li>循环调用,改成单次批量调用</li><li>缓存查询接口(考虑是否存在缓存穿透、缓存利用率低)</li></ul><h3 id="中间件访问慢" tabindex="-1"><a class="header-anchor" href="#中间件访问慢"><span>中间件访问慢</span></a></h3><ul><li><p>redis慢: 大key问题、热key,</p><ul><li>大key问题,进行拆分</li><li>热key,进行本地缓存</li></ul></li><li><p>kafka慢</p><ul><li><p>生产端:</p></li><li><p>消费端: 扩分区,增加消费节点、消费线程或者批量消费,批量写库</p></li></ul></li></ul><h3 id="程序逻辑" tabindex="-1"><a class="header-anchor" href="#程序逻辑"><span>程序逻辑</span></a></h3><ul><li>非法校验逻辑前置,避免无用数据穿透消耗系统资源,减少无用调用</li><li>循环调用改成单次批量调用</li><li>同步改异步</li><li>非核心逻辑剥离</li><li>线程池设置(千万不要创建无界队列线程池,线程池满了,要写拒绝策略)</li><li>锁合理设置(锁粒度)</li><li>优化gc参数(YGC、Full GC是否太频繁)</li><li>日志打印是否合理,日志同步/异步 ,日志输出也有可能导致阻塞</li></ul><h3 id="架构优化" tabindex="-1"><a class="header-anchor" href="#架构优化"><span>架构优化</span></a></h3><ul><li>高并发读逻辑都走redis,尽可能不穿透到db</li><li>涉及写逻辑: 异步、批量处理、分库分表</li><li>接口接入限流熔断,sentinel或hystrix</li><li>监控告警(error日志、接口慢查询或不可用或限流熔断告警、DB告警、中间件告警、应用系统告警)</li><li>接口动态配置开关,切断流量和非核心业务调用</li><li>设计自动对账job,保证数据自动可修复</li></ul><h1 id="二、索引失效问题" tabindex="-1"><a class="header-anchor" href="#二、索引失效问题"><span>二、索引失效问题</span></a></h1><p>常见innodb索引失效原因:</p><ul><li>未遵循最左前缀原则</li><li>使用了函数或者表达式</li><li>MySQL隐式类型转换,索引列类型和查询条件中的数据类型不匹配</li><li>OR条件使用不当 <ul><li>查询条件中使用了<code>OR</code>，且<code>OR</code>两边的条件中有一个未使用索引。如果<code>OR</code>条件中有一个列没有索引，MySQL可能会放弃使用索引。</li></ul></li><li>like 匹配结尾或者中间,非匹配前缀</li><li>is null 或者 is not null <ul><li>MySQL无法利用索引快速定位<code>NULL</code>值。</li></ul></li><li>数据分布不均匀 <ul><li>索引列的值分布不均匀，导致优化器认为全表扫描比索引扫描更高效。如当前列的值重复率过高</li></ul></li><li>索引列参与计算</li></ul><p>排查索引失效工具:</p><ul><li>慢sql查询日志监控</li><li>Explain 分析</li></ul><h1 id="三、spring-事务失效问题" tabindex="-1"><a class="header-anchor" href="#三、spring-事务失效问题"><span>三、spring 事务失效问题</span></a></h1><p>常见事务失效场景:</p><ul><li>方法自调用</li><li>异常被捕获,未抛出</li><li>异常rollback配置错误,未能正确捕获,应该全部会滚,结果已经执行的未会滚</li><li>方法非public</li><li>非运行时异常,默认情况只会捕获RuntimeException</li><li>不是Spring Bean</li><li>数据库不支持事务</li><li>传播机制配置错误</li><li>未启用事务管理或者多数据源未正确配置事务管理器</li></ul>',27)]))}]]),n=JSON.parse('{"path":"/summary/optimization-problem/normal-problem.html","title":"常见优化问题","lang":"zh-CN","frontmatter":{"description":"常见优化问题 一、接口变慢问题 如何排查慢接口原因? 定位问题: trace工具 如果没有APM trace平台, 生产环境安装arthas ,利用trace接口,定位那一块. 解决方法: 扩容 应用扩容: 应用cpu和内存变高 redis扩容、Mysql扩容、Kafka扩容 重启 代码逻辑修改 如何优化? 数据库慢 导致数据库查询变慢的原因: 未加索...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/notes-base/summary/optimization-problem/normal-problem.html"}],["meta",{"property":"og:site_name","content":"Offer收割机"}],["meta",{"property":"og:title","content":"常见优化问题"}],["meta",{"property":"og:description","content":"常见优化问题 一、接口变慢问题 如何排查慢接口原因? 定位问题: trace工具 如果没有APM trace平台, 生产环境安装arthas ,利用trace接口,定位那一块. 解决方法: 扩容 应用扩容: 应用cpu和内存变高 redis扩容、Mysql扩容、Kafka扩容 重启 代码逻辑修改 如何优化? 数据库慢 导致数据库查询变慢的原因: 未加索..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-11T08:46:41.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-11T08:46:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"常见优化问题\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-04-11T08:46:41.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Jason\\",\\"url\\":\\"https://jason.com\\"}]}"]]},"git":{"createdTime":1744361201000,"updatedTime":1744361201000,"contributors":[{"name":"Jason Statham","username":"Jason Statham","email":"xpt_notes@163.com","commits":1,"url":"https://github.com/Jason Statham"}]},"readingTime":{"minutes":3.06,"words":918},"filePathRelative":"summary/optimization-problem/normal-problem.md","localizedDate":"2025年4月11日","autoDesc":true}')}}]);