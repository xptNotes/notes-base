"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1857],{739:(e,r,t)=>{t.r(r),t.d(r,{comp:()=>a,data:()=>s});var i=t(6254);const o=t.p+"assets/img/分布式服务框架.f712a575.jpg",n={},a=(0,t(6995).A)(n,[["render",function(e,r){return(0,i.uX)(),(0,i.CE)("div",null,r[0]||(r[0]=[(0,i.Fv)('<h1 id="分布式服务框架总结" tabindex="-1"><a class="header-anchor" href="#分布式服务框架总结"><span>分布式服务框架总结</span></a></h1><blockquote><p>本篇读书笔记来源于, 书名: 分布式服务框架原理与实践。作者 李林锋</p></blockquote><h1 id="分布式服务框架架构原理" tabindex="-1"><a class="header-anchor" href="#分布式服务框架架构原理"><span>分布式服务框架架构原理</span></a></h1><h2 id="分布式服务框架整体架构" tabindex="-1"><a class="header-anchor" href="#分布式服务框架整体架构"><span>分布式服务框架整体架构</span></a></h2><figure><img src="'+o+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="rpc" tabindex="-1"><a class="header-anchor" href="#rpc"><span>RPC</span></a></h2><h3 id="维基百科定义" tabindex="-1"><a class="header-anchor" href="#维基百科定义"><span>维基百科定义</span></a></h3><blockquote><p>In <a href="https://en.wikipedia.org/wiki/Distributed_computing" target="_blank" rel="noopener noreferrer">distributed computing</a>, a <strong>remote procedure call</strong> (<strong>RPC</strong>) is when a <a href="https://en.wikipedia.org/wiki/Computer_program" target="_blank" rel="noopener noreferrer">computer program</a> causes a <a href="https://en.wikipedia.org/wiki/Procedural_programming" target="_blank" rel="noopener noreferrer">procedure</a> (subroutine) to execute in a different <a href="https://en.wikipedia.org/wiki/Address_space" target="_blank" rel="noopener noreferrer">address space</a> (commonly on another computer on a shared <a href="https://en.wikipedia.org/wiki/Computer_network" target="_blank" rel="noopener noreferrer">computer network</a>), which is written as if it were a normal (local) procedure call, without the <a href="https://en.wikipedia.org/wiki/Programmer" target="_blank" rel="noopener noreferrer">programmer</a> explicitly writing the details for the remote interaction. That is, the programmer writes essentially the same code whether the subroutine is local to the executing program, or remote. This is a form of <a href="https://en.wikipedia.org/wiki/Client%E2%80%93server_model" target="_blank" rel="noopener noreferrer">client–server interaction</a> (caller is <a href="https://en.wikipedia.org/wiki/Client_(computing)" target="_blank" rel="noopener noreferrer">client</a>, executor is <a href="https://en.wikipedia.org/wiki/Server_(computing)" target="_blank" rel="noopener noreferrer">server</a>), typically implemented via a <a href="https://en.wikipedia.org/wiki/Request%E2%80%93response" target="_blank" rel="noopener noreferrer">request–response</a> <a href="https://en.wikipedia.org/wiki/Message_passing" target="_blank" rel="noopener noreferrer">message passing</a> system. In the <a href="https://en.wikipedia.org/wiki/Object-oriented_programming" target="_blank" rel="noopener noreferrer">object-oriented programming</a> paradigm, RPCs are represented by remote method invocation (RMI). The RPC model implies a level of location transparency, namely that calling procedures are largely the same whether they are local or remote, but usually, they are not identical, so local calls can be distinguished from remote calls. Remote calls are usually orders of magnitude slower and less reliable than local calls, so distinguishing them is important.</p><p>RPC is a request–response protocol. An RPC is initiated by the <em>client</em>, which sends a request message to a known remote <em>server</em> to execute a specified procedure with supplied parameters. The remote server sends a response to the client, and the application continues its process. While the server is processing the call, the client is blocked (it waits until the server has finished processing before resuming execution), unless the client sends an asynchronous request to the server, such as an XMLHttpRequest. There are many variations and subtleties in various implementations, resulting in a variety of different (incompatible) RPC protocols.</p><p>实现:</p><ul><li><a href="https://en.wikipedia.org/wiki/Network_File_System" target="_blank" rel="noopener noreferrer"><br> NFS</a> (Network File System) is one of the most prominent users of RPC<br><a href="https://en.wikipedia.org/wiki/Network_File_System" target="_blank" rel="noopener noreferrer">NFS</a>（网络文件系统）是 RPC 最突出的用户之一</li><li><a href="https://en.wikipedia.org/wiki/Sun_RPC" target="_blank" rel="noopener noreferrer">Open Network Computing RPC</a>, by Sun Microsystems (also known as Sun RPC)<br><a href="https://en.wikipedia.org/wiki/Sun_RPC" target="_blank" rel="noopener noreferrer">Open Network Computing RPC</a>，由 Sun Microsystems 提供（也称为 Sun RPC）</li><li>D-Bus open source IPC program provides similar function to CORBA.<br> D-Bus 开源 IPC 程序提供与 CORBA 类似的功能。</li><li>SORCER provides the API and exertion-oriented language (EOL) for a federated method invocation<br> SORCER 为联合方法调用提供 API 和面向执行的语言 （EOL）</li><li><a href="https://en.wikipedia.org/wiki/XML-RPC" target="_blank" rel="noopener noreferrer">XML-RPC</a> is an RPC protocol that uses XML to encode its calls and <a href="https://en.wikipedia.org/wiki/HTTP" target="_blank" rel="noopener noreferrer">HTTP</a> as a transport mechanism.<br><a href="https://en.wikipedia.org/wiki/XML-RPC" target="_blank" rel="noopener noreferrer">XML-RPC</a> 是一种 RPC 协议，它使用 XML 对其调用进行编码，并使用 <a href="https://en.wikipedia.org/wiki/HTTP" target="_blank" rel="noopener noreferrer">HTTP</a> 作为传输机制。</li><li><a href="https://en.wikipedia.org/wiki/JSON-RPC" target="_blank" rel="noopener noreferrer">JSON-RPC</a> is an RPC protocol that uses JSON-encoded messages.<br><a href="https://en.wikipedia.org/wiki/JSON-RPC" target="_blank" rel="noopener noreferrer">JSON-RPC</a> 是一种使用 JSON 编码消息的 RPC 协议。</li><li><a href="https://en.wikipedia.org/wiki/JSON-WSP" target="_blank" rel="noopener noreferrer">JSON-WSP</a> is an RPC protocol that is inspired from JSON-RPC.<br><a href="https://en.wikipedia.org/wiki/JSON-WSP" target="_blank" rel="noopener noreferrer">JSON-WSP</a> 是一种受 JSON-RPC 启发的 RPC 协议。</li><li><a href="https://en.wikipedia.org/wiki/SOAP" target="_blank" rel="noopener noreferrer">SOAP</a> is a successor of XML-RPC and also uses XML to encode its HTTP-based calls.<br><a href="https://en.wikipedia.org/wiki/SOAP" target="_blank" rel="noopener noreferrer">SOAP</a> 是 XML-RPC 的后继者，也使用 XML 对其基于 HTTP 的调用进行编码。</li><li>ZeroC&#39;s <a href="https://en.wikipedia.org/wiki/Internet_Communications_Engine" target="_blank" rel="noopener noreferrer">Internet Communications Engine</a> (Ice) distributed computing platform.<br> ZeroC 的 <a href="https://en.wikipedia.org/wiki/Internet_Communications_Engine" target="_blank" rel="noopener noreferrer">Internet Communications Engine</a> （Ice） 分布式计算平台。</li><li><a href="https://en.wikipedia.org/wiki/Etch_(protocol)" target="_blank" rel="noopener noreferrer">Etch</a> framework for building network services.<br> 用于构建网络服务的 <a href="https://en.wikipedia.org/wiki/Etch_(protocol)" target="_blank" rel="noopener noreferrer">Etch</a> 框架。</li><li>Apache Thrift protocol and framework.<br> Apache Thrift 协议和框架。</li><li><a href="https://en.wikipedia.org/wiki/CORBA" target="_blank" rel="noopener noreferrer">CORBA</a> provides remote procedure invocation through an intermediate layer called the <em>object request broker</em>.<br><a href="https://en.wikipedia.org/wiki/CORBA" target="_blank" rel="noopener noreferrer">CORBA</a> 通过称为<em>对象请求代理</em>的中间层提供远程过程调用。</li><li><a href="https://en.wikipedia.org/wiki/Libevent" target="_blank" rel="noopener noreferrer">Libevent</a> provides a framework for creating RPC servers and clients.[<a href="https://en.wikipedia.org/wiki/Remote_procedure_call#cite_note-12" target="_blank" rel="noopener noreferrer">12]</a><br><a href="https://en.wikipedia.org/wiki/Libevent" target="_blank" rel="noopener noreferrer">Libevent</a> 提供了用于创建 RPC 服务器和客户端的框架。[<a href="https://en.wikipedia.org/wiki/Remote_procedure_call#cite_note-12" target="_blank" rel="noopener noreferrer">12]</a></li><li>Windows Communication Foundation is an application programming interface in the .NET framework for building connected, service-oriented applications.<br> Windows Communication Foundation 是 .NET Framework 中的一个应用程序编程接口，用于构建连接的、面向服务的应用程序。</li><li>Microsoft .NET Remoting offers RPC facilities for distributed systems implemented on the Windows platform. It has been superseded by <a href="https://en.wikipedia.org/wiki/Windows_Communication_Foundation" target="_blank" rel="noopener noreferrer">WCF</a>.<br> Microsoft .NET Remoting 为在 Windows 平台上实现的分布式系统提供 RPC 工具。它已被 <a href="https://en.wikipedia.org/wiki/Windows_Communication_Foundation" target="_blank" rel="noopener noreferrer">WCF</a> 取代。</li><li>The Microsoft DCOM uses MSRPC which is based on <a href="https://en.wikipedia.org/wiki/DCE/RPC" target="_blank" rel="noopener noreferrer">DCE/RPC</a><br> Microsoft DCOM 使用基于 <a href="https://en.wikipedia.org/wiki/DCE/RPC" target="_blank" rel="noopener noreferrer">DCE/RPC</a> 的 MSRPC</li><li>The Open Software Foundation DCE/RPC Distributed Computing Environment (also implemented by Microsoft).<br> 开放软件基金会 DCE/RPC 分布式计算环境（也由 Microsoft 实现）。</li><li><a href="https://en.wikipedia.org/wiki/Protocol_Buffers" target="_blank" rel="noopener noreferrer">Google Protocol Buffers (protobufs)</a> package includes an interface definition language used for its RPC protocols[<a href="https://en.wikipedia.org/wiki/Remote_procedure_call#cite_note-13" target="_blank" rel="noopener noreferrer">13]</a> open sourced in 2015 as gRPC.[<a href="https://en.wikipedia.org/wiki/Remote_procedure_call#cite_note-14" target="_blank" rel="noopener noreferrer">14]</a><br><a href="https://en.wikipedia.org/wiki/Protocol_Buffers" target="_blank" rel="noopener noreferrer">Google Protocol Buffers （protobufs）</a> 包包括一种接口定义语言，用于其 RPC 协议[<a href="https://en.wikipedia.org/wiki/Remote_procedure_call#cite_note-13" target="_blank" rel="noopener noreferrer">13]</a>，该语言于 2015 年作为 gRPC 开源。[<a href="https://en.wikipedia.org/wiki/Remote_procedure_call#cite_note-14" target="_blank" rel="noopener noreferrer">14]</a></li><li><a href="https://en.wikipedia.org/wiki/Web_Application_Messaging_Protocol" target="_blank" rel="noopener noreferrer">WAMP</a> combines RPC and Publish-Subscribe into a single, transport-agnostic protocol.<br><a href="https://en.wikipedia.org/wiki/Web_Application_Messaging_Protocol" target="_blank" rel="noopener noreferrer">WAMP</a> 将 RPC 和 Publish-Subscribe 合并到一个与传输无关的协议中。</li><li>Google Web Toolkit uses an asynchronous RPC to communicate to the server service.[<a href="https://en.wikipedia.org/wiki/Remote_procedure_call#cite_note-15" target="_blank" rel="noopener noreferrer">15]</a><br> Google Web Toolkit 使用异步 RPC 与服务器服务通信。[<a href="https://en.wikipedia.org/wiki/Remote_procedure_call#cite_note-15" target="_blank" rel="noopener noreferrer">15]</a></li><li>Apache Avro provides RPC where client and server exchange schemas in the connection handshake and code generation is not required.<br> Apache Avro 提供 RPC，其中不需要客户端和服务器在连接握手和代码生成中交换架构。</li></ul></blockquote><h3 id="为什么有了http还需要使用rpc" tabindex="-1"><a class="header-anchor" href="#为什么有了http还需要使用rpc"><span>为什么有了http还需要使用RPC?</span></a></h3><p>参考下面文章.</p><p><a href="https://blog.csdn.net/qq_45808700/article/details/131664118" target="_blank" rel="noopener noreferrer">https://blog.csdn.net/qq_45808700/article/details/131664118</a></p>',11)]))}]]),s=JSON.parse('{"path":"/summary/micro-service/basic/distribute-service-framework.html","title":"分布式服务框架总结","lang":"zh-CN","frontmatter":{"description":"分布式服务框架总结 本篇读书笔记来源于, 书名: 分布式服务框架原理与实践。作者 李林锋 分布式服务框架架构原理 分布式服务框架整体架构 RPC 维基百科定义 In distributed computing, a remote procedure call (RPC) is when a computer program causes a proce...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/notes-base/summary/micro-service/basic/distribute-service-framework.html"}],["meta",{"property":"og:site_name","content":"Offer收割机"}],["meta",{"property":"og:title","content":"分布式服务框架总结"}],["meta",{"property":"og:description","content":"分布式服务框架总结 本篇读书笔记来源于, 书名: 分布式服务框架原理与实践。作者 李林锋 分布式服务框架架构原理 分布式服务框架整体架构 RPC 维基百科定义 In distributed computing, a remote procedure call (RPC) is when a computer program causes a proce..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-11T08:46:41.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-11T08:46:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"分布式服务框架总结\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-04-11T08:46:41.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Jason\\",\\"url\\":\\"https://jason.com\\"}]}"]]},"git":{"createdTime":1744361201000,"updatedTime":1744361201000,"contributors":[{"name":"Jason Statham","username":"Jason Statham","email":"xpt_notes@163.com","commits":1,"url":"https://github.com/Jason Statham"}]},"readingTime":{"minutes":4.01,"words":1204},"filePathRelative":"summary/micro-service/basic/distribute-service-framework.md","localizedDate":"2025年4月11日","autoDesc":true}')},6995:(e,r)=>{r.A=(e,r)=>{const t=e.__vccOpts||e;for(const[e,i]of r)t[e]=i;return t}}}]);