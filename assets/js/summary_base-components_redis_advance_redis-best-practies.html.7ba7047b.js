"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[221],{2169:(e,a,t)=>{t.r(a),t.d(a,{comp:()=>r,data:()=>n});var s=t(6254);const i={},r=(0,t(6995).A)(i,[["render",function(e,a){return(0,s.uX)(),(0,s.CE)("div",null,a[0]||(a[0]=[(0,s.Fv)('<h1 id="redis最佳实践" tabindex="-1"><a class="header-anchor" href="#redis最佳实践"><span>Redis最佳实践</span></a></h1><h1 id="经典的缓存问题" tabindex="-1"><a class="header-anchor" href="#经典的缓存问题"><span>经典的缓存问题</span></a></h1><h2 id="缓存穿透问题" tabindex="-1"><a class="header-anchor" href="#缓存穿透问题"><span>缓存穿透问题</span></a></h2><p>缓存穿透: 由于设计前端请求参数不合理,可以给人遍历,造成大量不存在的数据请求,这些请求会访问缓存失败,全部进入到DB</p><p>缓存穿透解决方案:</p><ul><li>IP限流,避免同一IP访问大量请求</li><li>请求非法娇艳</li><li>布隆过滤器</li></ul><h2 id="缓存雪崩问题" tabindex="-1"><a class="header-anchor" href="#缓存雪崩问题"><span>缓存雪崩问题</span></a></h2><p>缓存雪崩问题: 在使用redis做缓存时,写入数据一般会设置过期时间,如果一批热点key在同一时间失效,导致查询请求都达到DB,给数据库造成巨大的读压力,严重可能导致数据库宕机.</p><p>解决缓存雪崩问题,方案:</p><ul><li>热点数据永不过期,避免请求热点数据的大量请求进入到db</li><li>错开过期时间</li><li>使用分布式锁或者MQ,请求串型化或者解耦</li></ul><h2 id="缓存击穿问题" tabindex="-1"><a class="header-anchor" href="#缓存击穿问题"><span>缓存击穿问题</span></a></h2><p>缓存击穿问题: 大量请求访问同一个key,当这个key失效后,大量请求达到DB</p><p>缓存击穿解决方案:</p><ul><li><p>永不过期</p></li><li><p>串行化访问,重构缓存</p></li></ul><h2 id="缓存一致性问题" tabindex="-1"><a class="header-anchor" href="#缓存一致性问题"><span>缓存一致性问题</span></a></h2>',15)]))}]]),n=JSON.parse('{"path":"/summary/base-components/redis/advance/redis-best-practies.html","title":"Redis最佳实践","lang":"zh-CN","frontmatter":{"description":"Redis最佳实践 经典的缓存问题 缓存穿透问题 缓存穿透: 由于设计前端请求参数不合理,可以给人遍历,造成大量不存在的数据请求,这些请求会访问缓存失败,全部进入到DB 缓存穿透解决方案: IP限流,避免同一IP访问大量请求 请求非法娇艳 布隆过滤器 缓存雪崩问题 缓存雪崩问题: 在使用redis做缓存时,写入数据一般会设置过期时间,如果一批热点key...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/notes-base/summary/base-components/redis/advance/redis-best-practies.html"}],["meta",{"property":"og:site_name","content":"Offer收割机"}],["meta",{"property":"og:title","content":"Redis最佳实践"}],["meta",{"property":"og:description","content":"Redis最佳实践 经典的缓存问题 缓存穿透问题 缓存穿透: 由于设计前端请求参数不合理,可以给人遍历,造成大量不存在的数据请求,这些请求会访问缓存失败,全部进入到DB 缓存穿透解决方案: IP限流,避免同一IP访问大量请求 请求非法娇艳 布隆过滤器 缓存雪崩问题 缓存雪崩问题: 在使用redis做缓存时,写入数据一般会设置过期时间,如果一批热点key..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-11T08:46:41.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-11T08:46:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Redis最佳实践\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-04-11T08:46:41.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Jason\\",\\"url\\":\\"https://jason.com\\"}]}"]]},"git":{"createdTime":1744361201000,"updatedTime":1744361201000,"contributors":[{"name":"Jason Statham","username":"Jason Statham","email":"xpt_notes@163.com","commits":1,"url":"https://github.com/Jason Statham"}]},"readingTime":{"minutes":1.02,"words":307},"filePathRelative":"summary/base-components/redis/advance/redis-best-practies.md","localizedDate":"2025年4月11日","autoDesc":true}')},6995:(e,a)=>{a.A=(e,a)=>{const t=e.__vccOpts||e;for(const[e,s]of a)t[e]=s;return t}}}]);