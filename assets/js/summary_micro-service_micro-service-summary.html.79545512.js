"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4983],{3941:(e,t,a)=>{a.r(t),a.d(t,{comp:()=>p,data:()=>c});var r=a(6254);const o={},p=(0,a(6995).A)(o,[["render",function(e,t){return(0,r.uX)(),(0,r.CE)("div",null,t[0]||(t[0]=[(0,r.Fv)('<h1 id="微服务面试总结" tabindex="-1"><a class="header-anchor" href="#微服务面试总结"><span>微服务面试总结</span></a></h1><h2 id="一个傻逼的问题-http是rpc吗-与rpc的区别" tabindex="-1"><a class="header-anchor" href="#一个傻逼的问题-http是rpc吗-与rpc的区别"><span>一个傻逼的问题 : HTTP是RPC吗? 与RPC的区别</span></a></h2><h3 id="http是rpc吗" tabindex="-1"><a class="header-anchor" href="#http是rpc吗"><span>http是RPC吗?</span></a></h3><p>RPC（Remote Procedure Call Protocol）远程过程调用协议。一个通俗的描述是：客户端在不知道调用细节的情况下，调用存在于远程计算机上的某个对象，就像调用本地应用程序中的对象一样。</p><p>比较正式的描述是：一种通过网络从远程计算机程序上请求服务，而不需要了解底层网络技术的协议。</p><p>那么我们至少从这样的描述中挖掘出几个要点：</p><ul><li>RPC是协议：既然是协议就只是一套规范，那么就需要有人遵循这套规范来进行实现。目前典型的RPC实现包括：Dubbo、Thrift、GRPC、Hetty等。</li><li>网络协议和网络IO模型对其透明：既然RPC的客户端认为自己是在调用本地对象。那么传输层使用的是TCP/UDP还是HTTP协议，又或者是一些其他的网络协议它就不需要关心了。</li><li>信息格式对其透明：我们知道在本地应用程序中，对于某个对象的调用需要传递一些参数，并且会返回一个调用结果。至于被调用的对象内部是如何使用这些参数，并计算出处理结果的，调用方是不需要关心的。那么对于远程调用来说，这些参数会以某种信息格式传递给网络上的另外一台计算机，这个信息格式是怎样构成的，调用方是不需要关心的。</li><li>应该有跨语言能力：为什么这样说呢？因为调用方实际上也不清楚远程服务器的应用程序是使用什么语言运行的。那么对于调用方来说，无论服务器方使用的是什么语言，本次调用都应该成功，并且返回值也应该按照调用方程序语言所能理解的形式进行描述。</li></ul><p>HTTP只是一个应用层协议规范.</p><p>RPC可以有多种应用层协议,然后经过序列化/反序列化 转换为二进制数据进行TCP可靠性传输.当然http最后也会转化为二进制数据,进行TCP可靠性传输.</p><h3 id="常见rpc" tabindex="-1"><a class="header-anchor" href="#常见rpc"><span>常见RPC</span></a></h3><p>GRPC: 底层传输就是http协议传输</p><h2 id="什么是rpc" tabindex="-1"><a class="header-anchor" href="#什么是rpc"><span>什么是RPC</span></a></h2>',12)]))}]]),c=JSON.parse('{"path":"/summary/micro-service/micro-service-summary.html","title":"微服务面试总结","lang":"zh-CN","frontmatter":{"description":"微服务面试总结 一个傻逼的问题 : HTTP是RPC吗? 与RPC的区别 http是RPC吗? RPC（Remote Procedure Call Protocol）远程过程调用协议。一个通俗的描述是：客户端在不知道调用细节的情况下，调用存在于远程计算机上的某个对象，就像调用本地应用程序中的对象一样。 比较正式的描述是：一种通过网络从远程计算机程序上请...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/notes-base/summary/micro-service/micro-service-summary.html"}],["meta",{"property":"og:site_name","content":"Offer收割机"}],["meta",{"property":"og:title","content":"微服务面试总结"}],["meta",{"property":"og:description","content":"微服务面试总结 一个傻逼的问题 : HTTP是RPC吗? 与RPC的区别 http是RPC吗? RPC（Remote Procedure Call Protocol）远程过程调用协议。一个通俗的描述是：客户端在不知道调用细节的情况下，调用存在于远程计算机上的某个对象，就像调用本地应用程序中的对象一样。 比较正式的描述是：一种通过网络从远程计算机程序上请..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-11T08:46:41.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-11T08:46:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"微服务面试总结\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-04-11T08:46:41.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Jason\\",\\"url\\":\\"https://jason.com\\"}]}"]]},"git":{"createdTime":1744361201000,"updatedTime":1744361201000,"contributors":[{"name":"Jason Statham","username":"Jason Statham","email":"xpt_notes@163.com","commits":1,"url":"https://github.com/Jason Statham"}]},"readingTime":{"minutes":2.07,"words":622},"filePathRelative":"summary/micro-service/micro-service-summary.md","localizedDate":"2025年4月11日","autoDesc":true}')},6995:(e,t)=>{t.A=(e,t)=>{const a=e.__vccOpts||e;for(const[e,r]of t)a[e]=r;return a}}}]);