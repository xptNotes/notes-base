"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2535],{6383:(n,s,a)=>{a.r(s),a.d(s,{comp:()=>i,data:()=>t});var e=a(6254);const l={},i=(0,a(6995).A)(l,[["render",function(n,s){return(0,e.uX)(),(0,e.CE)("div",null,s[0]||(s[0]=[(0,e.Fv)('<h1 id="日志配置" tabindex="-1"><a class="header-anchor" href="#日志配置"><span>日志配置</span></a></h1><h1 id="slf4j和log4j-logback-jdk-logging的关系" tabindex="-1"><a class="header-anchor" href="#slf4j和log4j-logback-jdk-logging的关系"><span>Slf4j和log4j,logback,jdk logging的关系</span></a></h1><p>Slf4j官方</p><p><a href="https://www.slf4j.org/manual.html" target="_blank" rel="noopener noreferrer">https://www.slf4j.org/manual.html</a></p><h1 id="slf4j-logback" tabindex="-1"><a class="header-anchor" href="#slf4j-logback"><span>Slf4j+Logback</span></a></h1><p><code>slf4j</code>+<code>logback</code>是这些组合中最常见的日志搭配。总结起来起核心的优势有：（1）使用<code>slf4j</code>+<code>logback</code>的性能更高；（2）<code>slf4j</code>和<code>logback</code>框架的作者是同一个，所以兼容性更好。</p><h2 id="pom" tabindex="-1"><a class="header-anchor" href="#pom"><span>pom</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>&lt;dependency&gt; </span></span>\n<span class="line"><span>  &lt;groupId&gt;ch.qos.logback&lt;/groupId&gt;</span></span>\n<span class="line"><span>  &lt;artifactId&gt;logback-classic&lt;/artifactId&gt;</span></span>\n<span class="line"><span>  &lt;version&gt;1.2.3&lt;/version&gt;</span></span>\n<span class="line"><span>&lt;/dependency&gt;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>&lt;!--支持注解--&gt;</span></span>\n<span class="line"><span>&lt;dependency&gt;</span></span>\n<span class="line"><span>  &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;</span></span>\n<span class="line"><span>  &lt;artifactId&gt;lombok&lt;/artifactId&gt;</span></span>\n<span class="line"><span>  &lt;version&gt;1.18.10&lt;/version&gt;</span></span>\n<span class="line"><span>  &lt;scope&gt;provided&lt;/scope&gt;</span></span>\n<span class="line"><span>&lt;/dependency&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="configuration配置" tabindex="-1"><a class="header-anchor" href="#configuration配置"><span>configuration配置</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span>\n<span class="line"><span>&lt;!-- 一般根节点不需要写属性了，使用默认的就好 --&gt;</span></span>\n<span class="line"><span>&lt;configuration&gt;</span></span>\n<span class="line"><span> </span></span>\n<span class="line"><span>    &lt;contextName&gt;demo&lt;/contextName&gt;</span></span>\n<span class="line"><span>    </span></span>\n<span class="line"><span>    &lt;!-- 该变量代表日志文件存放的目录名 --&gt;</span></span>\n<span class="line"><span>    &lt;property name=&quot;log.dir&quot; value=&quot;logs&quot;/&gt;</span></span>\n<span class="line"><span>    &lt;!-- 该变量代表日志文件名 --&gt;</span></span>\n<span class="line"><span>\t&lt;property name=&quot;log.appname&quot; value=&quot;eran&quot;/&gt;</span></span>\n<span class="line"><span>    </span></span>\n<span class="line"><span>    &lt;!--定义一个将日志输出到控制台的appender，名称为STDOUT --&gt;</span></span>\n<span class="line"><span>    &lt;appender name=&quot;STDOUT&quot; class=&quot;ch.qos.logback.core.ConsoleAppender&quot;&gt;</span></span>\n<span class="line"><span>        &lt;!-- 内容待定 --&gt;</span></span>\n<span class="line"><span>    &lt;/appender&gt;</span></span>\n<span class="line"><span>    </span></span>\n<span class="line"><span>    &lt;!--定义一个将日志输出到文件的appender，名称为FILE_LOG --&gt;</span></span>\n<span class="line"><span>    &lt;appender name=&quot;FILE_LOG&quot; class=&quot;ch.qos.logback.core.FileAppender&quot;&gt;</span></span>\n<span class="line"><span>        &lt;!-- 内容待定 --&gt;</span></span>\n<span class="line"><span>    &lt;/appender&gt;</span></span>\n<span class="line"><span>  </span></span>\n<span class="line"><span>    &lt;!-- 指定com.demo包下的日志打印级别为INFO，但是由于没有引用appender，所以该logger不会打印日志信息，日志信息向上传递 --&gt;</span></span>\n<span class="line"><span>    &lt;logger name=&quot;com.demo&quot; level=&quot;INFO&quot;/&gt;</span></span>\n<span class="line"><span>  </span></span>\n<span class="line"><span>    &lt;!-- 指定最基础的日志输出级别为DEBUG，并且绑定了名为STDOUT的appender，表示将日志信息输出到控制台 --&gt;</span></span>\n<span class="line"><span>    &lt;root level=&quot;debug&quot;&gt;</span></span>\n<span class="line"><span>        &lt;appender-ref ref=&quot;STDOUT&quot; /&gt;</span></span>\n<span class="line"><span>    &lt;/root&gt;</span></span>\n<span class="line"><span>&lt;/configuration&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',10)]))}]]),t=JSON.parse('{"path":"/summary/engineering-efficiency/log/log-setting.html","title":"日志配置","lang":"zh-CN","frontmatter":{"description":"日志配置 Slf4j和log4j,logback,jdk logging的关系 Slf4j官方 https://www.slf4j.org/manual.html Slf4j+Logback slf4j+logback是这些组合中最常见的日志搭配。总结起来起核心的优势有：（1）使用slf4j+logback的性能更高；（2）slf4j和logback框...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/notes-base/summary/engineering-efficiency/log/log-setting.html"}],["meta",{"property":"og:site_name","content":"Offer收割机"}],["meta",{"property":"og:title","content":"日志配置"}],["meta",{"property":"og:description","content":"日志配置 Slf4j和log4j,logback,jdk logging的关系 Slf4j官方 https://www.slf4j.org/manual.html Slf4j+Logback slf4j+logback是这些组合中最常见的日志搭配。总结起来起核心的优势有：（1）使用slf4j+logback的性能更高；（2）slf4j和logback框..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-10T13:01:21.000Z"}],["meta",{"property":"article:modified_time","content":"2025-05-10T13:01:21.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"日志配置\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-05-10T13:01:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Jason\\",\\"url\\":\\"https://jason.com\\"}]}"]]},"git":{"createdTime":1744361201000,"updatedTime":1746882081000,"contributors":[{"name":"Jason Statham","username":"Jason Statham","email":"xpt_notes@163.com","commits":2,"url":"https://github.com/Jason Statham"}]},"readingTime":{"minutes":1.1,"words":330},"filePathRelative":"summary/engineering-efficiency/log/log-setting.md","localizedDate":"2025年4月11日","autoDesc":true}')},6995:(n,s)=>{s.A=(n,s)=>{const a=n.__vccOpts||n;for(const[n,e]of s)a[n]=e;return a}}}]);